version: '3.8'

networks:
  pm_net:
    driver: bridge
  my_docker:
    external: true

services:
  # 前端服务
  frontend:
    container_name: 201_pm__frontend
    image: nginx:latest
    restart: always
    volumes:
      - ./frontend/html:/usr/share/nginx/html
      # - ./frontend/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./frontend/nginx/conf.d:/etc/nginx/conf.d:ro
    environment:
      - REACT_APP_API_URL=https://pm.frp.qianlima.fun/api
    command: >
      sh -c " grep -q 'location /api {' /etc/nginx/conf.d/default.conf || sed -i '/location \\/ {/ s#location / {#location /api { proxy_pass http://backend:3001; }\\
            location / {#' /etc/nginx/conf.d/default.conf
      exec nginx -g 'daemon off;' "
    networks:
      pm_net:
      my_docker:
        ipv4_address: 192.168.200.201

  # 后端服务
  backend:
    container_name: 201_pm__backend
    image: node:20.14.0
    restart: always
    volumes:
      - ./backend:/app
    working_dir: /app
    command: node index.js
    environment:
      - DATABASE_URL=postgresql://project_management:project_management@db:5432/project_management?schema=public
      - REDIS_URL=redis://redis:6379
    networks:
      - pm_net

  # 数据库服务
  db:
    container_name: 201_pm__db
    image: postgres:15.13
    restart: always
    volumes:
      - ./db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=project_management
      - POSTGRES_PASSWORD=project_management
      - POSTGRES_DB=project_management
    networks:
      - pm_net

  # Redis 服务
  redis:
    container_name: 201_pm__redis
    image: redis:7.0.11
    restart: always
    volumes:
      - ./redis:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      - pm_net
